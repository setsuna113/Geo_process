# Test Configuration for Integration Testing
# Using small test rasters with overlapping bounds

# =============================================================================
# MEMORY OPTIMIZATION - STREAMING EXPORT
# =============================================================================
merge:
  # Enable streaming mode for memory-efficient export
  enable_streaming: false  # Keep false for small test data
  streaming_chunk_size: 1000  # Smaller chunks for testing
  
  # Regular merge options
  enable_chunked_processing: false
  chunk_size: 1000

export:
  # Export formats
  formats: ['csv', 'parquet']  # Test both formats
  
  # Compression
  compress: false
  
  # Chunk size for writing
  chunk_size: 1000
  
  # Include metadata file
  include_metadata: true

# =============================================================================
# RESAMPLING CONFIGURATION
# =============================================================================
resampling:
  # Target resolution for test (keep same as source for now)
  target_resolution: 0.1  # Same as test rasters
  target_crs: 'EPSG:4326'
  
  # Resampling strategy per data type
  strategies:
    richness_data: 'sum'  # Sum for count data
  
  # Processing options
  chunk_size: 500  # Smaller for test
  validate_output: true
  preserve_sum: true
  cache_resampled: true
  engine: 'numpy'
  
  # Memory-aware processing settings
  enable_memory_aware_processing: true
  window_size: 256  # Small windows for test
  window_overlap: 16
  skip_data_loading_for_passthrough: true
  
  # Resolution matching
  allow_skip_resampling: true
  resolution_tolerance: 0.001

# =============================================================================
# TEST DATASETS
# =============================================================================
datasets:
  target_datasets:
    - name: "climate_temperature"
      path: "/home/yl998/dev/geo/data/test_rasters/climate_temperature.tiff"
      data_type: "continuous"
      band_name: "temperature"
      enabled: true
      
    - name: "climate_precipitation"
      path: "/home/yl998/dev/geo/data/test_rasters/climate_precipitation.tiff"
      data_type: "continuous"
      band_name: "precipitation"
      enabled: true
      
    - name: "landcover_forest"
      path: "/home/yl998/dev/geo/data/test_rasters/landcover_forest.tiff"
      data_type: "categorical"
      band_name: "forest_cover"
      enabled: true
      
    - name: "species_richness"
      path: "/home/yl998/dev/geo/data/test_rasters/species_richness.tiff"
      data_type: "richness_data"
      band_name: "species_richness"
      enabled: true

# =============================================================================
# ANALYSIS CONFIGURATION
# =============================================================================
spatial_analysis:
  som:
    grid_size: [3, 3]  # Small grid for test
    iterations: 100    # Fewer iterations for test
    sigma: 1.0
    learning_rate: 0.5
    
  gwpca:
    n_components: 2    # Fewer components for test
    bandwidth_method: 'AICc'
    block_size_km: 50
    
  maxp:
    min_area_km2: 1000  # Smaller regions for test
    ecological_scale: 'ecoregion'
    contiguity: 'queen'

# =============================================================================
# PROCESSING CONFIGURATION
# =============================================================================
processing:
  # Memory limits
  memory_limit_gb: 2.0  # Lower limit for testing
  enable_chunking: true
  chunk_size: 500
  
  # CPU limits  
  max_workers: 2  # Fewer workers for testing
  
  # Progress reporting
  report_interval: 10

# =============================================================================
# MONITORING AND LOGGING
# =============================================================================
monitoring:
  enable_database_logging: true
  log_batch_size: 50
  log_flush_interval: 2
  enable_metrics: true
  metrics_interval: 5
  memory_warning_mb: 1000  # Lower threshold for testing

logging:
  level: 'DEBUG'  # More verbose for testing
  
# =============================================================================
# PIPELINE CONTROL
# =============================================================================
pipeline:
  # Enable auto-cleanup for fresh test runs
  auto_cleanup: true
  
  # Allow stage skipping (though it won't work with auto_cleanup)
  allow_skip_stages: false
  
  # Other pipeline settings
  cleanup_checkpoints_on_success: true
  checkpoint_interval_stages: 1

# =============================================================================
# DATABASE
# =============================================================================
database:
  # Connection pooling
  pool_min_size: 1
  pool_max_size: 5
  
  # Timeouts
  query_timeout: 300  # 5 minutes
  connect_timeout: 30